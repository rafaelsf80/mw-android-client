/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-06-09 16:41:44 UTC)
 * on 2014-06-11 at 16:19:19 UTC 
 * Modify at your own risk.
 */

package com.google.mw.backend.caseApi;

/**
 * Service definition for CaseApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CaseApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class CaseApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.18.0-rc of the caseApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://semobiletraining.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "caseApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public CaseApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  CaseApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "deleteAllCases".
   *
   * This request holds the parameters needed by the caseApi server.  After setting any optional
   * parameters, call the {@link DeleteAllCases#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public DeleteAllCases deleteAllCases() throws java.io.IOException {
    DeleteAllCases result = new DeleteAllCases();
    initialize(result);
    return result;
  }

  public class DeleteAllCases extends CaseApiRequest<Void> {

    private static final String REST_PATH = "allcases";

    /**
     * Create a request for the method "deleteAllCases".
     *
     * This request holds the parameters needed by the the caseApi server.  After setting any optional
     * parameters, call the {@link DeleteAllCases#execute()} method to invoke the remote operation.
     * <p> {@link DeleteAllCases#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
     * ientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @since 1.13
     */
    protected DeleteAllCases() {
      super(CaseApi.this, "DELETE", REST_PATH, null, Void.class);
    }

    @Override
    public DeleteAllCases setAlt(java.lang.String alt) {
      return (DeleteAllCases) super.setAlt(alt);
    }

    @Override
    public DeleteAllCases setFields(java.lang.String fields) {
      return (DeleteAllCases) super.setFields(fields);
    }

    @Override
    public DeleteAllCases setKey(java.lang.String key) {
      return (DeleteAllCases) super.setKey(key);
    }

    @Override
    public DeleteAllCases setOauthToken(java.lang.String oauthToken) {
      return (DeleteAllCases) super.setOauthToken(oauthToken);
    }

    @Override
    public DeleteAllCases setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeleteAllCases) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeleteAllCases setQuotaUser(java.lang.String quotaUser) {
      return (DeleteAllCases) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeleteAllCases setUserIp(java.lang.String userIp) {
      return (DeleteAllCases) super.setUserIp(userIp);
    }

    @Override
    public DeleteAllCases set(String parameterName, Object value) {
      return (DeleteAllCases) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deleteCase".
   *
   * This request holds the parameters needed by the caseApi server.  After setting any optional
   * parameters, call the {@link DeleteCase#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public DeleteCase deleteCase(java.lang.Long id) throws java.io.IOException {
    DeleteCase result = new DeleteCase(id);
    initialize(result);
    return result;
  }

  public class DeleteCase extends CaseApiRequest<Void> {

    private static final String REST_PATH = "case/{id}";

    /**
     * Create a request for the method "deleteCase".
     *
     * This request holds the parameters needed by the the caseApi server.  After setting any optional
     * parameters, call the {@link DeleteCase#execute()} method to invoke the remote operation. <p>
     * {@link
     * DeleteCase#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected DeleteCase(java.lang.Long id) {
      super(CaseApi.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public DeleteCase setAlt(java.lang.String alt) {
      return (DeleteCase) super.setAlt(alt);
    }

    @Override
    public DeleteCase setFields(java.lang.String fields) {
      return (DeleteCase) super.setFields(fields);
    }

    @Override
    public DeleteCase setKey(java.lang.String key) {
      return (DeleteCase) super.setKey(key);
    }

    @Override
    public DeleteCase setOauthToken(java.lang.String oauthToken) {
      return (DeleteCase) super.setOauthToken(oauthToken);
    }

    @Override
    public DeleteCase setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeleteCase) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeleteCase setQuotaUser(java.lang.String quotaUser) {
      return (DeleteCase) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeleteCase setUserIp(java.lang.String userIp) {
      return (DeleteCase) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public DeleteCase setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public DeleteCase set(String parameterName, Object value) {
      return (DeleteCase) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getAllCases".
   *
   * This request holds the parameters needed by the caseApi server.  After setting any optional
   * parameters, call the {@link GetAllCases#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetAllCases getAllCases() throws java.io.IOException {
    GetAllCases result = new GetAllCases();
    initialize(result);
    return result;
  }

  public class GetAllCases extends CaseApiRequest<com.google.mw.backend.caseApi.model.CaseBeanCollection> {

    private static final String REST_PATH = "casebeancollection";

    /**
     * Create a request for the method "getAllCases".
     *
     * This request holds the parameters needed by the the caseApi server.  After setting any optional
     * parameters, call the {@link GetAllCases#execute()} method to invoke the remote operation. <p>
     * {@link
     * GetAllCases#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetAllCases() {
      super(CaseApi.this, "GET", REST_PATH, null, com.google.mw.backend.caseApi.model.CaseBeanCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetAllCases setAlt(java.lang.String alt) {
      return (GetAllCases) super.setAlt(alt);
    }

    @Override
    public GetAllCases setFields(java.lang.String fields) {
      return (GetAllCases) super.setFields(fields);
    }

    @Override
    public GetAllCases setKey(java.lang.String key) {
      return (GetAllCases) super.setKey(key);
    }

    @Override
    public GetAllCases setOauthToken(java.lang.String oauthToken) {
      return (GetAllCases) super.setOauthToken(oauthToken);
    }

    @Override
    public GetAllCases setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetAllCases) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetAllCases setQuotaUser(java.lang.String quotaUser) {
      return (GetAllCases) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetAllCases setUserIp(java.lang.String userIp) {
      return (GetAllCases) super.setUserIp(userIp);
    }

    @Override
    public GetAllCases set(String parameterName, Object value) {
      return (GetAllCases) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getAllNewNotifications".
   *
   * This request holds the parameters needed by the caseApi server.  After setting any optional
   * parameters, call the {@link GetAllNewNotifications#execute()} method to invoke the remote
   * operation.
   *
   * @param owner
   * @return the request
   */
  public GetAllNewNotifications getAllNewNotifications(java.lang.String owner) throws java.io.IOException {
    GetAllNewNotifications result = new GetAllNewNotifications(owner);
    initialize(result);
    return result;
  }

  public class GetAllNewNotifications extends CaseApiRequest<com.google.mw.backend.caseApi.model.CaseBeanCollection> {

    private static final String REST_PATH = "notifications";

    /**
     * Create a request for the method "getAllNewNotifications".
     *
     * This request holds the parameters needed by the the caseApi server.  After setting any optional
     * parameters, call the {@link GetAllNewNotifications#execute()} method to invoke the remote
     * operation. <p> {@link GetAllNewNotifications#initialize(com.google.api.client.googleapis.servic
     * es.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param owner
     * @since 1.13
     */
    protected GetAllNewNotifications(java.lang.String owner) {
      super(CaseApi.this, "GET", REST_PATH, null, com.google.mw.backend.caseApi.model.CaseBeanCollection.class);
      this.owner = com.google.api.client.util.Preconditions.checkNotNull(owner, "Required parameter owner must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetAllNewNotifications setAlt(java.lang.String alt) {
      return (GetAllNewNotifications) super.setAlt(alt);
    }

    @Override
    public GetAllNewNotifications setFields(java.lang.String fields) {
      return (GetAllNewNotifications) super.setFields(fields);
    }

    @Override
    public GetAllNewNotifications setKey(java.lang.String key) {
      return (GetAllNewNotifications) super.setKey(key);
    }

    @Override
    public GetAllNewNotifications setOauthToken(java.lang.String oauthToken) {
      return (GetAllNewNotifications) super.setOauthToken(oauthToken);
    }

    @Override
    public GetAllNewNotifications setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetAllNewNotifications) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetAllNewNotifications setQuotaUser(java.lang.String quotaUser) {
      return (GetAllNewNotifications) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetAllNewNotifications setUserIp(java.lang.String userIp) {
      return (GetAllNewNotifications) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String owner;

    /**

     */
    public java.lang.String getOwner() {
      return owner;
    }

    public GetAllNewNotifications setOwner(java.lang.String owner) {
      this.owner = owner;
      return this;
    }

    @Override
    public GetAllNewNotifications set(String parameterName, Object value) {
      return (GetAllNewNotifications) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getCase".
   *
   * This request holds the parameters needed by the caseApi server.  After setting any optional
   * parameters, call the {@link GetCase#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetCase getCase(java.lang.Long id) throws java.io.IOException {
    GetCase result = new GetCase(id);
    initialize(result);
    return result;
  }

  public class GetCase extends CaseApiRequest<com.google.mw.backend.caseApi.model.CaseBean> {

    private static final String REST_PATH = "casebean/{id}";

    /**
     * Create a request for the method "getCase".
     *
     * This request holds the parameters needed by the the caseApi server.  After setting any optional
     * parameters, call the {@link GetCase#execute()} method to invoke the remote operation. <p>
     * {@link
     * GetCase#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetCase(java.lang.Long id) {
      super(CaseApi.this, "GET", REST_PATH, null, com.google.mw.backend.caseApi.model.CaseBean.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetCase setAlt(java.lang.String alt) {
      return (GetCase) super.setAlt(alt);
    }

    @Override
    public GetCase setFields(java.lang.String fields) {
      return (GetCase) super.setFields(fields);
    }

    @Override
    public GetCase setKey(java.lang.String key) {
      return (GetCase) super.setKey(key);
    }

    @Override
    public GetCase setOauthToken(java.lang.String oauthToken) {
      return (GetCase) super.setOauthToken(oauthToken);
    }

    @Override
    public GetCase setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetCase) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetCase setQuotaUser(java.lang.String quotaUser) {
      return (GetCase) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetCase setUserIp(java.lang.String userIp) {
      return (GetCase) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetCase setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetCase set(String parameterName, Object value) {
      return (GetCase) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getMyCases".
   *
   * This request holds the parameters needed by the caseApi server.  After setting any optional
   * parameters, call the {@link GetMyCases#execute()} method to invoke the remote operation.
   *
   * @param owner
   * @return the request
   */
  public GetMyCases getMyCases(java.lang.String owner) throws java.io.IOException {
    GetMyCases result = new GetMyCases(owner);
    initialize(result);
    return result;
  }

  public class GetMyCases extends CaseApiRequest<com.google.mw.backend.caseApi.model.CaseBeanCollection> {

    private static final String REST_PATH = "casebeancollection/{owner}";

    /**
     * Create a request for the method "getMyCases".
     *
     * This request holds the parameters needed by the the caseApi server.  After setting any optional
     * parameters, call the {@link GetMyCases#execute()} method to invoke the remote operation. <p>
     * {@link
     * GetMyCases#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param owner
     * @since 1.13
     */
    protected GetMyCases(java.lang.String owner) {
      super(CaseApi.this, "GET", REST_PATH, null, com.google.mw.backend.caseApi.model.CaseBeanCollection.class);
      this.owner = com.google.api.client.util.Preconditions.checkNotNull(owner, "Required parameter owner must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetMyCases setAlt(java.lang.String alt) {
      return (GetMyCases) super.setAlt(alt);
    }

    @Override
    public GetMyCases setFields(java.lang.String fields) {
      return (GetMyCases) super.setFields(fields);
    }

    @Override
    public GetMyCases setKey(java.lang.String key) {
      return (GetMyCases) super.setKey(key);
    }

    @Override
    public GetMyCases setOauthToken(java.lang.String oauthToken) {
      return (GetMyCases) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMyCases setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetMyCases) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMyCases setQuotaUser(java.lang.String quotaUser) {
      return (GetMyCases) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMyCases setUserIp(java.lang.String userIp) {
      return (GetMyCases) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String owner;

    /**

     */
    public java.lang.String getOwner() {
      return owner;
    }

    public GetMyCases setOwner(java.lang.String owner) {
      this.owner = owner;
      return this;
    }

    @Override
    public GetMyCases set(String parameterName, Object value) {
      return (GetMyCases) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "hasNewNotification".
   *
   * This request holds the parameters needed by the caseApi server.  After setting any optional
   * parameters, call the {@link HasNewNotification#execute()} method to invoke the remote operation.
   *
   * @param owner
   * @return the request
   */
  public HasNewNotification hasNewNotification(java.lang.String owner) throws java.io.IOException {
    HasNewNotification result = new HasNewNotification(owner);
    initialize(result);
    return result;
  }

  public class HasNewNotification extends CaseApiRequest<com.google.mw.backend.caseApi.model.CaseBeanCollection> {

    private static final String REST_PATH = "notifications";

    /**
     * Create a request for the method "hasNewNotification".
     *
     * This request holds the parameters needed by the the caseApi server.  After setting any optional
     * parameters, call the {@link HasNewNotification#execute()} method to invoke the remote
     * operation. <p> {@link HasNewNotification#initialize(com.google.api.client.googleapis.services.A
     * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param owner
     * @since 1.13
     */
    protected HasNewNotification(java.lang.String owner) {
      super(CaseApi.this, "POST", REST_PATH, null, com.google.mw.backend.caseApi.model.CaseBeanCollection.class);
      this.owner = com.google.api.client.util.Preconditions.checkNotNull(owner, "Required parameter owner must be specified.");
    }

    @Override
    public HasNewNotification setAlt(java.lang.String alt) {
      return (HasNewNotification) super.setAlt(alt);
    }

    @Override
    public HasNewNotification setFields(java.lang.String fields) {
      return (HasNewNotification) super.setFields(fields);
    }

    @Override
    public HasNewNotification setKey(java.lang.String key) {
      return (HasNewNotification) super.setKey(key);
    }

    @Override
    public HasNewNotification setOauthToken(java.lang.String oauthToken) {
      return (HasNewNotification) super.setOauthToken(oauthToken);
    }

    @Override
    public HasNewNotification setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (HasNewNotification) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public HasNewNotification setQuotaUser(java.lang.String quotaUser) {
      return (HasNewNotification) super.setQuotaUser(quotaUser);
    }

    @Override
    public HasNewNotification setUserIp(java.lang.String userIp) {
      return (HasNewNotification) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String owner;

    /**

     */
    public java.lang.String getOwner() {
      return owner;
    }

    public HasNewNotification setOwner(java.lang.String owner) {
      this.owner = owner;
      return this;
    }

    @Override
    public HasNewNotification set(String parameterName, Object value) {
      return (HasNewNotification) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateCase".
   *
   * This request holds the parameters needed by the caseApi server.  After setting any optional
   * parameters, call the {@link UpdateCase#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.google.mw.backend.caseApi.model.CaseBean}
   * @return the request
   */
  public UpdateCase updateCase(com.google.mw.backend.caseApi.model.CaseBean content) throws java.io.IOException {
    UpdateCase result = new UpdateCase(content);
    initialize(result);
    return result;
  }

  public class UpdateCase extends CaseApiRequest<Void> {

    private static final String REST_PATH = "void";

    /**
     * Create a request for the method "updateCase".
     *
     * This request holds the parameters needed by the the caseApi server.  After setting any optional
     * parameters, call the {@link UpdateCase#execute()} method to invoke the remote operation. <p>
     * {@link
     * UpdateCase#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.google.mw.backend.caseApi.model.CaseBean}
     * @since 1.13
     */
    protected UpdateCase(com.google.mw.backend.caseApi.model.CaseBean content) {
      super(CaseApi.this, "PUT", REST_PATH, content, Void.class);
    }

    @Override
    public UpdateCase setAlt(java.lang.String alt) {
      return (UpdateCase) super.setAlt(alt);
    }

    @Override
    public UpdateCase setFields(java.lang.String fields) {
      return (UpdateCase) super.setFields(fields);
    }

    @Override
    public UpdateCase setKey(java.lang.String key) {
      return (UpdateCase) super.setKey(key);
    }

    @Override
    public UpdateCase setOauthToken(java.lang.String oauthToken) {
      return (UpdateCase) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateCase setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateCase) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateCase setQuotaUser(java.lang.String quotaUser) {
      return (UpdateCase) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateCase setUserIp(java.lang.String userIp) {
      return (UpdateCase) super.setUserIp(userIp);
    }

    @Override
    public UpdateCase set(String parameterName, Object value) {
      return (UpdateCase) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link CaseApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link CaseApi}. */
    @Override
    public CaseApi build() {
      return new CaseApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CaseApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCaseApiRequestInitializer(
        CaseApiRequestInitializer caseapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(caseapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
